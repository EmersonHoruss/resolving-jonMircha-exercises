/*
5) Programa una función que invierta las palabras de una cadena de texto, pe. 
miFuncion("Hola Mundo") devolverá "odnuM aloH".
*/
const reverseString = string => {
    let word = '';
    for(let i=string.length-1;i>-1;i--)word+=string[i];
    return word;
}

console.log(reverseString(''))





/*
6) Programa una función para contar el número de veces que se repite una 
palabra en un texto largo, pe. miFuncion("hola mundo adios mundo", "mundo") 
devolverá 2.
*/
const countSpecificString = (string, specificString) => {
    let cont = 0;
    while(string.search(specificString)!==-1){
        string = string.search(specificString) === 0 ?
            string.replace(specificString + ' ', ''):
            string.replace(' ' + specificString , '');
            
        cont++;
        
    }
    return cont;    
}
const triedString = 'tres tristes tigres traganos tragaban trigo en un trigal' +
'en tres tristes trastos'+
'tanto trigo tragaban que los tres tigres tristes tragones se atragantaban';

const triedString2 = 'el cielo esta enladrillado quien lo desenladrillara' +
'el que lo desenladrille buen desenladrillador sera';

console.log(countSpecificString(triedString, 'tri'))





/*
7) Programa una función que valide si una palabra o frase dada, es un
palíndromo (que se lee igual en un sentido que en otro), pe. mifuncion("Salas") 
devolverá true.
*/

const palindromo = string => 
    string.replace(/\s+/g, '') === reverseString(string).replace(/\s+/g, '')?
        true:
        false

console.log(palindromo('ligar es ser agil'));
console.log(palindromo('arenera'));
console.log(palindromo('roma'));
console.log(palindromo('hola mundo'));





/*
8) Programa una función que elimine cierto patrón de caracteres de un texto 
dado, pe. miFuncion("xyz1, xyz2, xyz3, xyz4 y xyz5", "xyz") devolverá  "1, 2, 
3, 4 y 5.
*/
const deletePatron = (string, patron)=>
    string.replace(new RegExp(patron, "g"),'')

console.log(deletePatron("xyz1, xyz2, xyz3, xyz4 y xyz5", "xyz"))
console.log(deletePatron("ifmn umn can mnimagine mnu can programmn", "mn"))




